
<!-- <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"> -->

<link rel="stylesheet" href="./assets/style.css">

    <!-- Your Custom Script -->
    <script>
        // Your existing window.buildTabsets function here
        window.buildTabsets = function(tocID) {
            
            console.log("start 1");
            
            // build a tabset from a section div with the .tabset class
            function buildTabset(tabset) {
                
                // check for fade and pills options
                var fade = tabset.hasClass("tabset-fade");
                var pills = tabset.hasClass("tabset-pills");
                var navClass = pills ? "nav-pills" : "nav-tabs";
                
                // determine the heading level of the tabset and tabs
                var match = tabset.attr('class').match(/level(\d) /);
                if (match === null)
                return;
                var tabsetLevel = Number(match[1]);
                var tabLevel = tabsetLevel + 1;
                
                // find all subheadings immediately below
                var tabs = tabset.find("div.section.level" + tabLevel);
                
                if (!tabs.length)
                return;
                
                // create tablist and tab-content elements
                var tabList = $('<ul class="nav ' + navClass + '" role="tablist"></ul>');
                $(tabs[0]).before(tabList);
                var tabContent = $('<div class="tab-content"></div>');
                $(tabs[0]).before(tabContent);
                
                // build the tabset
                var activeTab = 0;
                tabs.each(function(i) {
                    
                    console.log("found tab");
                    
                    // get the tab div
                    var tab = $(tabs[i]);
                    
                    // get the id then sanitize it for use with bootstrap tabs
                    var id = tab.attr('id');
                    
                    // see if this is marked as the active tab
                    if (tab.hasClass('active'))
                    activeTab = i;
                    
                    // remove any table of contents entries associated with
                    // this ID (since we'll be removing the heading element)
                    $("div#" + tocID + " li a[href='#" + id + "']").parent().remove();
                    
                    // sanitize the id for use with bootstrap tabs
                    id = id.replace(/[.\/?&!#<>]/g, '').replace(/\s/g, '_');
                    tab.attr('id', id);
                    
                    // get the heading element within it, grab it's text, then remove it
                    var heading = tab.find('h' + tabLevel + ':first');
                    var headingText = heading.html();
                    heading.remove();
                    
                    // build and append the tab list item
                    var a = $('<a role="tab" data-toggle="tab">' + headingText + '</a>');
                    a.attr('href', '#' + id);
                    a.attr('aria-controls', id);
                    var li = $('<li role="presentation"></li>');
                    li.append(a);
                    tabList.append(li);
                    
                    // set it's attributes
                    tab.attr('role', 'tabpanel');
                    tab.addClass('tab-pane');
                    tab.addClass('tabbed-pane');
                    if (fade)
                    tab.addClass('fade');
                    
                    // move it into the tab content div
                    tab.detach().appendTo(tabContent);
                });
                
                // set active tab
                $(tabList.children('li')[activeTab]).addClass('active');
                var active = $(tabContent.children('div.section')[activeTab]);
                active.addClass('active');
                if (fade)
                active.addClass('in');
                
                if (tabset.hasClass("tabset-sticky"))
                tabset.rmarkdownStickyTabs();
            }
            
            // convert section divs with the .tabset class to tabsets
            var tabsets = $("div.section.tabset");
            
            console.log(tabsets);
            
            tabsets.each(function(i) {
                buildTabset($(tabsets[i]));
            });
        };
        
    </script>

    <style>
        
        ul.nav.nav-tabs {
            padding: 10px 10px 10px 10px;
            border-bottom: none;
        }
        
        /* Add a black background color to the top navigation */
        .nav {
            background-color: #fdfefe ;
            overflow: hidden;
            /* border: 2px solid #5dade2;
            border-radius: 5px; */
        }
        
        /* Style the links inside the navigation bar */
        .nav a {
            float: left;
            color: #17202a ;
            text-align: center;
            padding: 14px 16px;
            text-decoration: none;
            font-size: 17px;
        }
        
        /* Change the color of links on hover */
        .nav a:hover {
            background-color: #ddd;
            color: black;
            border-radius: 5px;
        }
        
        /* Add a color to the active/current link */
        .nav a.active {
            background-color: #5dade2;
            color: white;
            border-radius: 5px;
        }
        
    </style>    